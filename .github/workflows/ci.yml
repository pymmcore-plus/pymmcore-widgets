name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}
  workflow_dispatch:

jobs:
  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install check-manifest && check-manifest

  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }} ${{ matrix.backend }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]
        python-version: ["3.8", "3.10"]
        backend: [pyside2, pyqt5]
        include:
          - platform: windows-latest
            python-version: "3.10"
            backend: pyside6
          - platform: windows-latest
            python-version: "3.10"
            backend: pyqt6
          - platform: windows-latest
            python-version: "3.9"
            backend: pyside2
          - platform: windows-latest
            python-version: "3.9"
            backend: pyqt5

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e .[test,image,${{ matrix.backend }}]

      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

      - name: Install Micro-Manager
        run: mmcore install

      - name: Test
        run: pytest -v --cov=pymmcore_widgets --cov-report=xml --color=yes

      - name: Coverage
        uses: codecov/codecov-action@v3

  test-napari-micromanager:
    name: test napari-micromanager
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: pymmcore-widgets
          fetch-depth: 0

      - uses: actions/checkout@v3
        with:
          repository: pymmcore-plus/napari-micromanager
          path: napari-micromanager
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e ./pymmcore-widgets[test,image,PyQt5]
          python -m pip install -e ./napari-micromanager[testing]

      - name: Install Micro-Manager
        run: mmcore install

      - name: Run napari-micromanager tests
        run: python -m pytest -v --color=yes -W ignore
        working-directory: napari-micromanager


  deploy:
    name: Deploy
    needs: test
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: install
        run: |
          git tag
          pip install -U pip
          pip install -U build twine
          python -m build
          twine check dist/*
          ls -lh dist

      - name: Build and publish
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
